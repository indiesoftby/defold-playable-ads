--
-- Local functions
--

local function toggle_music(self, enabled)
	if enabled then
		if not self.playing then
			self.playing = true
			sound.play("/music#sound")
		end
	else
		if self.playing then
			self.playing = false
			sound.stop("/music#sound")
		end
	end
end

local function mraid_callback(self, event, data)
	if event == mraid.EVENT_VIEWABLE_CHANGE then
		print("mraid.EVENT_VIEWABLE_CHANGE:", data.viewable)
		toggle_music(self, data.viewable)
	end
end

--
-- Script
--

function init(self)
	-- If `mraid` is available, the game is ran in the webview of Unity Ads or other mraid-based ad system.
	if mraid then
		mraid.set_listener(mraid_callback)
	end

	toggle_music(self, true)
	go.set("/music", "euler.z", 20)
	go.animate("/music", "euler.z", go.PLAYBACK_LOOP_PINGPONG, -20, go.EASING_INCUBIC, 0.7)
	go.animate("/music", "scale", go.PLAYBACK_LOOP_PINGPONG, 1.2, go.EASING_INCUBIC, 0.7)

	msg.post(".", "acquire_input_focus")

	msg.post("@render:/", "clear_color", { color = vmath.vector4(0xEB / 255, 0xEB / 255, 0xEB / 255, 1.0) })
	msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })

	msg.post("/interface#play_now", "enable")
	msg.post("/interface#play_now", hash("transition_in"))
end

function on_input(self, action_id, action)
end
